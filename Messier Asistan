import tkinter as tk
import datetime
import webbrowser
import urllib.parse
import time
import os
from playsound import playsound
from googleapiclient.discovery import build

default_sound_file = r"Galaxy-Note-4-Melody.mp3"  # Ses dosyası yolu

# API anahtarını ve CSE ID'sini burada tanımlayın.  Güvenlik açısından riskli!dir
API_KEY = "YOUR_API_KEY"  # BURAYA GERÇEK API ANAHTARINIZI YAZIN
CSE_ID = "YOUR_CSE_ID"     # BURAYA GERÇEK CSE ID'NIZI YAZIN


if not os.path.exists(default_sound_file):
    uyari_mesaji = "Uyarı: Varsayılan ses dosyası bulunamadı. Zamanlayıcı sesi çalınmayacak.\n"
else:
    uyari_mesaji = ""


def google_search(query):
    try:
        service = build("customsearch", "v1", developerKey=API_KEY)
        res = service.cse().list(q=query, cx=CSE_ID).execute()
        results = res.get('items', [])
        return results
    except Exception as e:
        return f"Google Arama hatası: {e}"


def selamla():
    mesaj_alani.insert(tk.END, "Merhaba! Sana nasıl yardımcı olabilirim?\n")


def zaman_sor():
    simdi = datetime.datetime.now()
    zaman_metni = f"Şu anki zaman: {simdi.strftime('%H:%M:%S')}\n"
    ekle_mesaj(zaman_metni)



def poe_ac():
    try:
        webbrowser.open("https://poe.com/Messier_AI")
        ekle_mesaj("Messier_AI sayfasına yönlendiriliyorsunuz...\n")
    except webbrowser.Error as e:
        ekle_mesaj(f"Hata: Poe sayfası açılamadı: {e}\n")
    except Exception as e:
        ekle_mesaj(f"Hata: Beklenmedik bir hata oluştu: {e}\n")


def zamanlayici(dakika):
    try:
        dakika_sn = int(dakika) * 60
        if dakika_sn <= 0:
            ekle_mesaj("Geçersiz süre. Lütfen pozitif bir sayı girin.\n")
            return

        time.sleep(dakika_sn)
        if os.path.exists(default_sound_file):
            try:
                playsound(default_sound_file)
            except playsound.PlaysoundException as e:
                ekle_mesaj(f"Hata: Ses dosyası çalınamadı: {e}\n")
            except Exception as e:
                ekle_mesaj(f"Hata: Ses dosyası çalınırken beklenmedik bir hata oluştu: {e}\n")
        ekle_mesaj(f"{dakika} dakikalık zamanlayıcı tamamlandı!\n")
    except ValueError:
        ekle_mesaj("Geçersiz süre. Lütfen bir sayı girin.\n")
    except Exception as e:
        ekle_mesaj(f"Hata: Zamanlayıcıda beklenmedik bir hata oluştu: {e}\n")


def komut_islec(event=None):
    komut = giris_alani.get().lower()
    giris_alani.delete(0, tk.END)

    try:
        if komut == "selam":
            selamla()
        elif komut == "zaman":
            zaman_sor()
        elif komut.startswith("arama"):
            arama_terimi = komut[6:]
            results = google_search(arama_terimi)
            if isinstance(results, str):
                ekle_mesaj(results + "\n")
            else:
                for result in results:
                    ekle_mesaj(f"Başlık: {result.get('title', 'Başlık Yok')}\nURL: {result.get('link', 'URL Yok')}\n\n")
        elif komut == "yapayzeka" or komut == "messier ai":
            poe_ac()
        elif komut == "çıkış":
            pencere.destroy()
        elif komut.startswith("zamanlayıcı"):
            try:
                dakika = komut[11:]
                zamanlayici(dakika)
            except IndexError:
                ekle_mesaj("Lütfen zamanlayıcı süresini belirtin (örneğin: zamanlayıcı 5).\n")
        else:
            ekle_mesaj("Geçersiz komut.\n")
    except Exception as e:
        ekle_mesaj(f"Hata: Komut işlenirken beklenmedik bir hata oluştu: {e}\n")

def ekle_mesaj(mesaj):
    mesaj_alani.config(state=tk.NORMAL)
    mesaj_alani.insert(tk.END, mesaj)
    mesaj_alani.config(state=tk.DISABLED)
    mesaj_alani.see(tk.END)


pencere = tk.Tk()
pencere.title("Messier Asistan")

etiket = tk.Label(pencere, text="Komutunuzu girin:")
etiket.pack(pady=5)

giris_alani = tk.Entry(pencere)
giris_alani.pack(pady=5)
giris_alani.bind("<Return>", komut_islec)

komut_butonu = tk.Button(pencere, text="Gönder", command=komut_islec)
komut_butonu.pack(pady=5)

mesaj_alani = tk.Text(pencere, height=10, width=40)
mesaj_alani.pack(pady=5)
mesaj_alani.config(state=tk.DISABLED)

mesaj_alani.config(state=tk.NORMAL)
mesaj_alani.insert(tk.END, uyari_mesaji)
mesaj_alani.config(state=tk.DISABLED)

pencere.mainloop()
